import java.text.SimpleDateFormat

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bhkim'
version = '1.0.0'
apply plugin: 'war'


def buildDate = getDate()

static def getDate() {
	return new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
}
bootWar.enabled = false

war {
	archiveBaseName = "auth-" + buildDate
	archiveClassifier = ''
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}






configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//Jpa 쿼리 log
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.2'

	//QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//aws
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.529')
	implementation 'com.amazonaws:aws-java-sdk-dynamodb'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//test lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaExec) {
	jvmArgs '-XX:+EnableDynamicAgentLoading'
}
